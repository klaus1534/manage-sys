<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huanxink.msys.managesys.mapper.ManageSysUserMapper">
  <resultMap id="BaseResultMap" type="com.huanxink.msys.managesys.model.ManageSysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
    <result column="locked" jdbcType="TINYINT" property="locked" />
    <result column="last_pwd_update" jdbcType="TIMESTAMP" property="lastPwdUpdate" />
  </resultMap>
  <resultMap id="BaseJoinRoleResultMap" type="com.huanxink.msys.managesys.model.ManageSysUser" extends="BaseResultMap">
    <collection property="roleSet" ofType="com.huanxink.msys.managesys.model.ManageSysRole">
      <id property="id" column="role_id"/>
      <result property="role" column="role"/>
      <result property="roleName" column="role_name"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, email, enabled, locked, last_pwd_update
  </sql>
  <sql id="Base_Join_Role_Column_List">
    a.id, a.username, a.password, a.email, a.enabled, a.locked, a.last_pwd_update,
    b.role_id, c.role, c.role_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_users
    where a.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="seacherPageList" parameterType="java.util.Map" resultMap="BaseJoinRoleResultMap">
    select
    <include refid="Base_Join_Role_Column_List" />
    from sys_users a left join sys_user_role b on a.id = b.user_id
    left join sys_role c on b.role_id = c.id
    where 1=1
    <if test="id!=null">
      and a.id = #{id,jdbcType=INTEGER}
    </if>
    <if test="username!=null and username!=''">
      and a.username = #{username, jdbcType=VARCHAR}
    </if>
  </select>
  <select id="seacherJoinPageList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_users
    where 1=1
    <if test="id!=null">
      and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="username!=null and username!=''">
      and username = #{username, jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user_role where user_id=#{id,jdbcType=INTEGER};
    delete from sys_users where id = #{id,jdbcType=INTEGER};
  </delete>
  <insert id="insert" parameterType="com.huanxink.msys.managesys.model.ManageSysUser">
    insert into sys_users (id, username, password, 
      email, enabled, locked, 
      last_pwd_update)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{enabled,jdbcType=TINYINT}, #{locked,jdbcType=TINYINT}, 
      #{lastPwdUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.huanxink.msys.managesys.model.ManageSysUser">
    insert into sys_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="lastPwdUpdate != null">
        last_pwd_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=TINYINT},
      </if>
      <if test="lastPwdUpdate != null">
        #{lastPwdUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanxink.msys.managesys.model.ManageSysUser">
    update sys_users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=TINYINT},
      </if>
      <if test="lastPwdUpdate != null">
        last_pwd_update = #{lastPwdUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanxink.msys.managesys.model.ManageSysUser">
    update sys_users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT},
      locked = #{locked,jdbcType=TINYINT},
      last_pwd_update = #{lastPwdUpdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByDo" parameterType="com.huanxink.msys.managesys.model.dto.ManageSysUserDo">
    update sys_users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=TINYINT},
      </if>
      <if test="lastPwdUpdate != null">
        last_pwd_update = #{lastPwdUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER};
    <if test="roles!=null and roles.length>0">
      delete from sys_user_role where user_id=#{id,jdbcType=INTEGER};
      insert into sys_user_role(user_id, role_id) values
      <foreach collection="roles" item="roleId" separator=",">
        (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
      </foreach>
    </if>
  </update>
</mapper>